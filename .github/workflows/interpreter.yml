name: Interpreter Test

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

env:
  SPEC_SPLIT_DOTS: 160

jobs:
  test-interpreter_spec:
    runs-on: ubuntu-22.04
    container:
      image: crystallang/crystal:1.10.1-build
    name: "Test Interpreter"
    steps:
      - uses: actions/checkout@v4

      - name: Test interpreter_spec
        run: make interpreter_spec junit_output=.junit/interpreter_spec.xml

  build-interpreter:
    runs-on: ubuntu-22.04
    container:
      image: crystallang/crystal:1.10.1-build
    name: Build interpreter
    steps:
      - uses: actions/checkout@v4

      - name: Build compiler
        run: make interpreter=1 release=1

      - name: Upload compiler artifact
        uses: actions/upload-artifact@v3
        with:
          name: crystal-interpreter
          path: |
            .build/crystal

  test-interpreter-std_spec:
    needs: build-interpreter
    runs-on: ubuntu-22.04
    timeout-minutes: 90
    container:
      image: crystallang/crystal:1.10.1-build
      env:
        HANDLE_SIGNAL_IN_INTERPRETER: "1"
    name: "Test std_spec with interpreter"
    steps:
      - uses: actions/checkout@v4

      - name: Download compiler artifact
        uses: actions/download-artifact@v3
        with:
          name: crystal-interpreter
          path: .build/

      - name: Mark downloaded compiler as executable
        run: chmod +x .build/crystal

      - name: Run std_spec with interpreter
        shell: bash
        run: |
          set -e
          export HANDLE_SIGNAL_IN_INTERPRETER=1
          status=0
          for part in $(seq 0 15); do
            echo "Running part ${part} of 15"
            timeout 900 env SPEC_SPLIT="${part}%16" bin/crystal i spec/interpreter_std_spec.cr -- --junit_output .junit/interpreter-std_spec.${part}.xml 2> /dev/null
            job_status=$?
            echo $job_status
            if [ $job_status -ne 0 ]; then
              status=$job_status
            fi
          done
          echo "final status: ${status}"
          exit $status
