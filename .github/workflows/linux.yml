name: Linux CI

on: [push, pull_request]

env:
  TRAVIS_OS_NAME: linux
  SPEC_SPLIT_DOTS: 160

jobs:
  test_linux:
    env:
      ARCH: x86_64
      ARCH_CMD: linux64
      DOCKER_TEST_PREFIX: crystallang/crystal:${{ matrix.crystal_bootstrap_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crystal_bootstrap_version: [1.0.0, 1.1.1, 1.2.2]
    steps:
      - name: Download Crystal source
        uses: actions/checkout@v2

      - name: Prepare System
        run: bin/ci prepare_system

      - name: Prepare Build
        run: bin/ci prepare_build

      - name: Test
        run: bin/ci build

  test_alpine:
    env:
      ARCH: x86_64-musl
      ARCH_CMD: linux64
    runs-on: ubuntu-latest
    steps:
      - name: Download Crystal source
        uses: actions/checkout@v2

      - name: Prepare System
        run: bin/ci prepare_system

      - name: Prepare Build
        run: bin/ci prepare_build

      - name: Test
        run: bin/ci build

  test_llvm:
    env:
      ARCH: x86_64
      ARCH_CMD: linux64
    strategy:
      fail-fast: false
      matrix:
        include:
        - llvm_version: 13.0.0
          llvm_url: https://github.com/llvm/llvm-project/releases/download/llvmorg-13.0.0/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
          base_image: ubuntu-20.04
    runs-on: ${{ matrix.base_image }}
    name: "Test LLVM ${{ matrix.llvm_version }} (${{ matrix.base_image }})"
    steps:
      - name: Download Crystal source
        uses: actions/checkout@v2

      - name: Prepare System
        run: bin/ci prepare_system

      - name: Prepare Build
        run: bin/ci prepare_build

      - name: Install LLVM ${{ matrix.llvm_version }}
        run: mkdir -p llvm && curl -L ${{ matrix.llvm_url }} > llvm.tar.xz && tar x --xz -C llvm --strip-components=1 -f llvm.tar.xz

      - name: Test
        run: bin/ci with_build_env "make clean deps crystal std_spec compiler_spec LLVM_CONFIG=\$(pwd)/llvm/bin/llvm-config threads=1 junit_output=.junit/spec.xml"

  test_preview_mt:
    env:
      ARCH: x86_64
      ARCH_CMD: linux64
    runs-on: ubuntu-latest
    steps:
      - name: Download Crystal source
        uses: actions/checkout@v2

      - name: Prepare System
        run: bin/ci prepare_system

      - name: Prepare Build
        run: bin/ci prepare_build

      - name: Make Crystal
        run: bin/ci with_build_env 'make crystal'

      - name: Test
        run: bin/ci with_build_env 'CRYSTAL_WORKERS=4 make std_spec threads=1 FLAGS="-D preview_mt"'

  check_format:
    env:
      ARCH: x86_64
      ARCH_CMD: linux64
    runs-on: ubuntu-latest
    steps:
      - name: Download Crystal source
        uses: actions/checkout@v2

      - name: Prepare System
        run: bin/ci prepare_system

      - name: Prepare Build
        run: bin/ci prepare_build

      - name: Check Format
        run: bin/ci format

  deploy_api_docs:
    if: github.repository_owner == 'crystal-lang' && github.event_name == 'push' && github.ref == 'refs/heads/master'
    env:
      ARCH: x86_64
      ARCH_CMD: linux64
    runs-on: ubuntu-latest
    steps:
      - name: Download Crystal source
        uses: actions/checkout@v2

      - name: Prepare System
        run: bin/ci prepare_system

      - name: Prepare Build
        run: bin/ci prepare_build

      - name: Build docs
        run: bin/ci with_build_env 'make crystal docs threads=1'

      - name: Set revision
        run: echo $GITHUB_SHA > ./docs/revision.txt

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy API docs to S3
        run: |
          aws s3 sync ./docs s3://crystal-api/api/master --delete
