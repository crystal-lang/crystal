name: LLVM CI

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

env:
  SPEC_SPLIT_DOTS: 160

jobs:
  llvm_test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        llvm_version:
          - "13.0.1"
          - "14.0.6"
          - "15.0.7"
          - "16.0.6"
          - "17.0.6"
          - "18.1.5"
          - "19.1.0"

    name: "LLVM ${{ matrix.llvm_version }}"
    steps:
      - name: Checkout Crystal source
        uses: actions/checkout@v4

      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v4
        with:
          path: ./llvm
          key: llvm-libs-${{ matrix.llvm_version }}-${{ hashFiles('.github/workflows/llvm.yml') }}-linux
        if: "${{ !env.ACT }}"

      - name: Checkout LLVM source
        uses: actions/checkout@v4
        with:
          repository: llvm/llvm-project
          path: llvm-src
          ref: llvmorg-${{ matrix.llvm_version }}
        if: steps.cache-llvm.outputs.cache-hit != 'true'

      - name: Build LLVM
        run: |
          mkdir -p llvm-src/build
          cd llvm-src/build
          cmake ../llvm -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD="X86;AArch64;WebAssembly" \
            -DBUILD_SHARED_LIBS=OFF -DLLVM_INCLUDE_BENCHMARKS=OFF -DLLVM_INCLUDE_DOCS=OFF -DLLVM_INCLUDE_TESTS=OFF -DLLVM_ENABLE_ZSTD=OFF
          cmake --build . -j8
          cmake "-DCMAKE_INSTALL_PREFIX=$(pwd)/../../llvm" -P cmake_install.cmake
        if: steps.cache-llvm.outputs.cache-hit != 'true'

      - name: Set up LLVM
        run: |
          sudo apt-get install -y lld
          echo "PATH=$(pwd)/llvm/bin:$PATH" >> $GITHUB_ENV
          echo "LLVM_CONFIG=$(pwd)/llvm/bin/llvm-config" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$(pwd)/llvm/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1
        with:
          crystal: "1.13.3"

      - name: Build libllvm_ext
        run: make -B deps

      - name: Test compiler_spec
        run: make compiler_spec junit_output=.junit/compiler_spec.xml

      - name: Integration test
        run: make crystal std_spec threads=1 junit_output=.junit/std_spec.xml
