{% skip_file unless flag?(:bits32) %}

require "spec"

# Ported from compiler-rt:test/builtins/Unit/muloti4_test.c

private def test__muloti4(a : Int128, b : Int128, expected : Int128, expected_overflow : Int128, file = __FILE__, line = __LINE__)
  it "passes compiler-rt builtins unit tests" do
    actual_overflow : Int32 = 0
    actual = __muloti4(a, b, pointerof(actual_overflow))
    actual_overflow.should eq(expected_overflow), file, line
    if !expected_overflow
      actual.should eq(expected), file, line
    end
  end
end

private HEX_0_00000000000000B504F333F9DE5BE000 = 0x00000000000000B504F333F9DE5BE000.to_i128!
private HEX_0_000000000000000000B504F333F9DE5B = 0x000000000000000000B504F333F9DE5B.to_i128!
private HEX_0_7FFFFFFFFFFFF328DF915DA296E8A000 = 0x7FFFFFFFFFFFF328DF915DA296E8A000.to_i128!
private HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF = 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF.to_i128!
private HEX_0_80000000000000000000000000000001 = 0x80000000000000000000000000000001.to_i128!
private HEX_0_80000000000000000000000000000000 = 0x80000000000000000000000000000000.to_i128!

describe "__muloti4" do
  test__muloti4(0_i128, 0_i128, 0_i128, 0_i128)
  test__muloti4(0_i128, 1, 0_i128, 0_i128)
  test__muloti4(1_i128, 0_i128, 0_i128, 0_i128)
  test__muloti4(0_i128, 10_i128, 0_i128, 0_i128)
  test__muloti4(10_i128, 0_i128, 0_i128, 0_i128)
  test__muloti4(0_i128, 81985529216486895_i128, 0_i128, 0_i128)
  test__muloti4(81985529216486895_i128, 0_i128, 0_i128, 0_i128)
  test__muloti4(0_i128, -1_i128, 0_i128, 0_i128)
  test__muloti4(-1_i128, 0_i128, 0_i128, 0_i128)
  test__muloti4(0_i128, -10_i128, 0_i128, 0_i128)
  test__muloti4(-10_i128, 0_i128, 0_i128, 0_i128)
  test__muloti4(0_i128, -81985529216486895_i128, 0_i128, 0_i128)
  test__muloti4(-81985529216486895_i128, 0_i128, 0_i128, 0_i128)
  test__muloti4(1_i128, 1_i128, 1_i128, 0_i128)
  test__muloti4(1_i128, 10_i128, 10_i128, 0_i128)
  test__muloti4(10_i128, 1_i128, 10_i128, 0_i128)
  test__muloti4(1_i128, 81985529216486895_i128, 81985529216486895_i128, 0_i128)
  test__muloti4(81985529216486895_i128, 1_i128, 81985529216486895_i128, 0_i128)
  test__muloti4(1_i128, -1_i128, -1_i128, 0_i128)
  test__muloti4(1_i128, -10_i128, -10_i128, 0_i128)
  test__muloti4(-10_i128, 1_i128, -10_i128, 0_i128)
  test__muloti4(1_i128, -81985529216486895_i128, -81985529216486895_i128, 0_i128)
  test__muloti4(-81985529216486895_i128, 1_i128, -81985529216486895_i128, 0_i128)
  test__muloti4(3037000499_i128, 3037000499_i128, 9223372030926249001_i128, 0_i128)
  test__muloti4(-3037000499_i128, 3037000499_i128, -9223372030926249001_i128, 0_i128)
  test__muloti4(3037000499_i128, -3037000499_i128, -9223372030926249001_i128, 0_i128)
  test__muloti4(-3037000499_i128, -3037000499_i128, 9223372030926249001_i128, 0_i128)
  test__muloti4(4398046511103_i128, 2097152_i128, 9223372036852678656_i128, 0_i128)
  test__muloti4(-4398046511103_i128, 2097152_i128, -9223372036852678656_i128, 0_i128)
  test__muloti4(4398046511103_i128, -2097152_i128, -9223372036852678656_i128, 0_i128)
  test__muloti4(-4398046511103_i128, -2097152_i128, 9223372036852678656_i128, 0_i128)
  test__muloti4(2097152_i128, 4398046511103_i128, 9223372036852678656_i128, 0_i128)
  test__muloti4(-2097152_i128, 4398046511103_i128, -9223372036852678656_i128, 0_i128)
  test__muloti4(2097152_i128, -4398046511103_i128, -9223372036852678656_i128, 0_i128)
  test__muloti4(-2097152_i128, -4398046511103_i128, 9223372036852678656_i128, 0_i128)
  test__muloti4(HEX_0_00000000000000B504F333F9DE5BE000, HEX_0_000000000000000000B504F333F9DE5B, HEX_0_7FFFFFFFFFFFF328DF915DA296E8A000, 0_i128)
  test__muloti4(HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF, -2_i128, HEX_0_80000000000000000000000000000001, 1_i128)
  test__muloti4(-2_i128, HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF, HEX_0_80000000000000000000000000000001, 1_i128)
  test__muloti4(HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF, -1_i128, HEX_0_80000000000000000000000000000001, 0_i128)
  test__muloti4(-1_i128, HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF, HEX_0_80000000000000000000000000000001, 0_i128)
  test__muloti4(HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF, 0_i128, 0_i128, 0_i128)
  test__muloti4(0_i128, HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF, 0_i128, 0_i128)
  test__muloti4(HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF, 1_i128, HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF, 0_i128)
  test__muloti4(1_i128, HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF, HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF, 0_i128)
  test__muloti4(HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF, 2_i128, HEX_0_80000000000000000000000000000001, 1_i128)
  test__muloti4(2_i128, HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF, HEX_0_80000000000000000000000000000001, 1_i128)
  test__muloti4(HEX_0_80000000000000000000000000000000, -2_i128, HEX_0_80000000000000000000000000000000, 1_i128)
  test__muloti4(-2_i128, HEX_0_80000000000000000000000000000000, HEX_0_80000000000000000000000000000000, 1_i128)
  test__muloti4(HEX_0_80000000000000000000000000000000, -1_i128, HEX_0_80000000000000000000000000000000, 1_i128)
  test__muloti4(-1_i128, HEX_0_80000000000000000000000000000000, HEX_0_80000000000000000000000000000000, 1_i128)
  test__muloti4(HEX_0_80000000000000000000000000000000, 0_i128, 0_i128, 0_i128)
  test__muloti4(0_i128, HEX_0_80000000000000000000000000000000, 0_i128, 0_i128)
  test__muloti4(HEX_0_80000000000000000000000000000000, 1_i128, HEX_0_80000000000000000000000000000000, 0_i128)
  test__muloti4(1_i128, HEX_0_80000000000000000000000000000000, HEX_0_80000000000000000000000000000000, 0_i128)
  test__muloti4(HEX_0_80000000000000000000000000000000, 2_i128, HEX_0_80000000000000000000000000000000, 1_i128)
  test__muloti4(2_i128, HEX_0_80000000000000000000000000000000, HEX_0_80000000000000000000000000000000, 1_i128)
  test__muloti4(HEX_0_80000000000000000000000000000001, -2_i128, HEX_0_80000000000000000000000000000001, 1_i128)
  test__muloti4(-2_i128, HEX_0_80000000000000000000000000000001, HEX_0_80000000000000000000000000000001, 1_i128)
  test__muloti4(HEX_0_80000000000000000000000000000001, -1_i128, HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF, 0_i128)
  test__muloti4(-1_i128, HEX_0_80000000000000000000000000000001, HEX_0_7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF, 0_i128)
  test__muloti4(HEX_0_80000000000000000000000000000001, 0_i128, 0_i128, 0_i128)
  test__muloti4(0_i128, HEX_0_80000000000000000000000000000001, 0_i128, 0_i128)
  test__muloti4(HEX_0_80000000000000000000000000000001, 1_i128, HEX_0_80000000000000000000000000000001, 0_i128)
  test__muloti4(1_i128, HEX_0_80000000000000000000000000000001, HEX_0_80000000000000000000000000000001, 0_i128)
  test__muloti4(HEX_0_80000000000000000000000000000001, 2_i128, HEX_0_80000000000000000000000000000000, 1_i128)
  test__muloti4(2_i128, HEX_0_80000000000000000000000000000001, HEX_0_80000000000000000000000000000000, 1_i128)
end
